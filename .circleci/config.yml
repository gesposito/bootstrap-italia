version: 2

aliases:
  - &working_directory
    ~/repo

  - &restore_cache
    keys:
    - v3-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
    - v3-dependencies-

  - &install
    name: Ruby dependencies
    command: bundle install

  - &npm_install
    name: npm dependencies
    command: npm install

  - &save_cache
    paths:
      - vendor/bundle
      - node_modules
    key: v3-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}

  - &tag_filters
    branches:
      ignore: /.*/
    tags:
      only: /^v?[0-9]+(\.[0-9]+)*/

defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/ruby:2.5.1-node
      environment:
        BUNDLE_PATH: vendor/bundle
        JEKYLL_ENV: production

  working_directory: *working_directory

jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Check versions
          command: |
            ruby --version
            bundle --version
            node --version
            npm --version
            docker --version

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *install
      - run: *npm_install
      - save_cache: *save_cache

      - run:
          name: Build
          command: |
            npm run build

      # Persist the specified paths (workspace/echo-output) into the workspace
      # for use in downstream job. Must be an absolute path, or relative path
      # from working_directory. This is a directory on the container which is
      # taken to be the root directory of the workspace.
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist
            - docs/assets/dist

  github-update-pages:
    <<: *defaults

    steps:
      - add_ssh_keys:
          fingerprints:
            # Fingerprint comes from a key that is published here:
            # https://github.com/italia/bootstrap-italia/settings/keys and
            # https://circleci.com/gh/italia/bootstrap-italia/edit#ssh
            # Details can be found here:
            # https://circleci.com/docs/1.0/adding-read-write-deployment-key/ (no 2.0 docs yet)
            # https://circleci.com/docs/2.0/configuration-reference/#add_ssh_keys
            - "db:73:ff:52:7b:1f:26:07:40:c7:c9:e9:9d:5a:5c:69"
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      # Restore dependencies
      - restore_cache: *restore_cache
      - run: *install

      - run:
          name: Update GitHub Pages
          command: |
            npm run documentation-deploy-to-gh-pages

  github-create-release:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      # Restore dependencies
      - restore_cache: *restore_cache
      - run: *npm_install

      - run:
          name: Create GitHub Release
          command: |
            sh ./scripts/create-release-attachment.sh
            npm run release

  npm-publish:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      - run:
          name: NPM publish
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish

# Workflows enable multiple jobs in parallel
workflows:
  version: 2

  deploy:
    jobs:
      - build:
          # Note: The build job must also have a filters tags section, as it is a transient dependency of the deploy job.
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/

      - github-update-pages:
          requires:
            - build
          filters: *tag_filters

      - github-create-release:
          requires:
            - build
          filters: *tag_filters

      # - npm-publish:
      #     requires:
      #       - build
      #     filters: *tag_filters
